{"ast":null,"code":"var _jsxFileName = \"/Users/Ronnie/Desktop/SEIR1213/Unit2/Projects/vegan-recipe-maker/vegan-recipe-maker/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Spinner, Card, CardImg, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipe = data => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const ingredientsUrl = `https://api.spoonacular.com/recipes/${id}/ingredientWidget.json?apiKey=${API_KEY}`;\n  const instructionsUrl = `https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${API_KEY}`;\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState([]);\n  useEffect(() => {\n    fetch(ingredientsUrl).then(res => res.json()).then(data => setIngredients(data.ingredients));\n  }, []);\n  useEffect(() => {\n    fetch(instructionsUrl).then(res => res.json()).then(data => setInstructions(data[0].steps));\n  }, []);\n\n  if (!ingredients) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"black\",\n      size: \"\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardImg, {\n        alt: \"recipe\",\n        src: `https://spoonacular.com/recipeImages/${id}-312x231.jpg`,\n        top: true,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u2022\", ingredient.name, \": \", ingredient.amount.us.value, \" \", ingredient.amount.us.unit]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: instructions.map(instruction => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u2022\", instruction.step]\n          }, instruction.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recipe, \"J/0RPoceXCaMOMnY8zQmTFHvGEo=\", false, function () {\n  return [useParams];\n});\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/Ronnie/Desktop/SEIR1213/Unit2/Projects/vegan-recipe-maker/vegan-recipe-maker/src/Recipe.js"],"names":["useEffect","useState","useParams","Spinner","Card","CardImg","CardBody","CardTitle","CardText","Recipe","data","id","API_KEY","process","env","REACT_APP_API_KEY","ingredientsUrl","instructionsUrl","ingredients","setIngredients","instructions","setInstructions","fetch","then","res","json","steps","map","ingredient","index","name","amount","us","value","unit","instruction","step","number"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Spinner,\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardText,\n} from \"reactstrap\";\n\nconst Recipe = (data) => {\n  let { id } = useParams();\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const ingredientsUrl = `https://api.spoonacular.com/recipes/${id}/ingredientWidget.json?apiKey=${API_KEY}`;\n  const instructionsUrl = `https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${API_KEY}`;\n\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState([]);\n\n  useEffect(() => {\n    fetch(ingredientsUrl)\n      .then((res) => res.json())\n      .then((data) => setIngredients(data.ingredients));\n  }, []);\n\n  useEffect(() => {\n    fetch(instructionsUrl)\n      .then((res) => res.json())\n      .then((data) => setInstructions(data[0].steps));\n  }, []);\n\n  if (!ingredients) {\n    return (\n      <Spinner color=\"black\" size=\"\">\n        Loading...\n      </Spinner>\n    );\n  }\n\n  return (\n    <div>\n      <Card>\n        <CardImg alt=\"recipe\" src={`https://spoonacular.com/recipeImages/${ id }-312x231.jpg`} top width=\"100%\" />\n        <CardBody>\n          <CardTitle tag=\"h5\">Ingredients</CardTitle>\n          <CardText>\n            {ingredients.map((ingredient, index) => (\n              <div key={index}>\n                •{ingredient.name}: {ingredient.amount.us.value}{\" \"}\n                {ingredient.amount.us.unit}\n              </div>\n            ))}\n          </CardText>\n        </CardBody>\n      </Card>\n      <Card>\n        <CardBody>\n          <CardTitle tag=\"h5\">Instructions</CardTitle>\n          <CardText>\n            {instructions.map((instruction) => (\n              <div key={instruction.number}>•{instruction.step}</div>\n            ))}\n          </CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}