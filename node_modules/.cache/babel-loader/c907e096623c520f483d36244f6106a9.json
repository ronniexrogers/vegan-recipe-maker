{"ast":null,"code":"var _jsxFileName = \"/Users/Ronnie/Desktop/SEIR1213/Unit2/Projects/vegan-recipe-maker/vegan-recipe-maker/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Spinner, Card, CardImg, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipe = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const ingredientsUrl = `https://api.spoonacular.com/recipes/${id}/ingredientWidget.json?apiKey=${API_KEY}`;\n  const instructionsUrl = `https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${API_KEY}`;\n  const summaryUrl = `https://api.spoonacular.com/recipes/${id}/summary?apiKey=${API_KEY}`;\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState([]);\n  const [summary, setSummary] = useState([]);\n  const [visualIngredients, setVisualIngredients] = useState(\"\");\n  useEffect(() => {\n    fetch(ingredientsUrl).then(res => res.json()).then(data => setIngredients(data.ingredients));\n  }, []);\n  useEffect(() => {\n    fetch(instructionsUrl).then(res => res.json()).then(data => setInstructions(data[0].steps));\n  }, []);\n  useEffect(() => {\n    fetch(summaryUrl).then(res => res.json()).then(data => setSummary(data));\n  }, []);\n\n  if (!ingredients) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"black\",\n      size: \"\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"recipe\">\n    //   <h1> {summary.title} </h1>\n    //   <div className=\"ingredients\">\n    //     Ingredients:\n    //     {ingredients.map((ingredient, index) => (\n    //       <div key={index}>\n    //         -{ingredient.name}: {ingredient.amount.us.value}{\" \"}\n    //         {ingredient.amount.us.unit}\n    //       </div>\n    //     ))}\n    //   </div>\n    //   <div className=\"instructions\">\n    //     Instructions:\n    //     {instructions.map((instruction) => (\n    //       <div key={instruction.number}>-{instruction.step}</div>\n    //     ))}\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardImg, {\n          alt: \"recipe\",\n          src: \"\",\n          top: true,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CardText, {\n            children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u2022\", ingredient.name, \": \", ingredient.amount.us.value, \" \", ingredient.amount.us.unit]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CardText, {\n            children: instructions.map(instruction => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u2022\", instruction.step]\n            }, instruction.number, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Recipe, \"Yz4Crfudb0E5va3lRw++pHaG3cQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/Ronnie/Desktop/SEIR1213/Unit2/Projects/vegan-recipe-maker/vegan-recipe-maker/src/Recipe.js"],"names":["useEffect","useState","useParams","Spinner","Card","CardImg","CardBody","CardTitle","CardText","Recipe","id","API_KEY","process","env","REACT_APP_API_KEY","ingredientsUrl","instructionsUrl","summaryUrl","ingredients","setIngredients","instructions","setInstructions","summary","setSummary","visualIngredients","setVisualIngredients","fetch","then","res","json","data","steps","map","ingredient","index","name","amount","us","value","unit","instruction","step","number"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Spinner,\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardText,\n} from \"reactstrap\";\n\nconst Recipe = () => {\n  let { id } = useParams();\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const ingredientsUrl = `https://api.spoonacular.com/recipes/${id}/ingredientWidget.json?apiKey=${API_KEY}`;\n  const instructionsUrl = `https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${API_KEY}`;\n  const summaryUrl = `https://api.spoonacular.com/recipes/${id}/summary?apiKey=${API_KEY}`;\n\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState([]);\n  const [summary, setSummary] = useState([]);\n  const [visualIngredients, setVisualIngredients] = useState(\"\");\n\n  useEffect(() => {\n    fetch(ingredientsUrl)\n      .then((res) => res.json())\n      .then((data) => setIngredients(data.ingredients));\n  }, []);\n\n  useEffect(() => {\n    fetch(instructionsUrl)\n      .then((res) => res.json())\n      .then((data) => setInstructions(data[0].steps));\n  }, []);\n\n  useEffect(() => {\n    fetch(summaryUrl)\n      .then((res) => res.json())\n      .then((data) => setSummary(data));\n  }, []);\n\n  if (!ingredients) {\n    return (\n      <Spinner color=\"black\" size=\"\">\n        Loading...\n      </Spinner>\n    );\n  }\n\n  return (\n    // <div className=\"recipe\">\n    //   <h1> {summary.title} </h1>\n    //   <div className=\"ingredients\">\n    //     Ingredients:\n    //     {ingredients.map((ingredient, index) => (\n    //       <div key={index}>\n    //         -{ingredient.name}: {ingredient.amount.us.value}{\" \"}\n    //         {ingredient.amount.us.unit}\n    //       </div>\n    //     ))}\n    //   </div>\n\n    //   <div className=\"instructions\">\n    //     Instructions:\n    //     {instructions.map((instruction) => (\n    //       <div key={instruction.number}>-{instruction.step}</div>\n    //     ))}\n    //   </div>\n    // </div>\n\n    <div>\n      <Card>\n        <CardImg alt=\"recipe\" src=\"\" top width=\"100%\" />\n        <CardBody>\n          <CardTitle tag=\"h5\">Ingredients</CardTitle>\n          <CardText>\n            {ingredients.map((ingredient, index) => (\n              <div key={index}>\n                •{ingredient.name}: {ingredient.amount.us.value}{\" \"}\n                {ingredient.amount.us.unit}\n              </div>\n            ))}\n          </CardText>\n        </CardBody>\n      </Card>\n      <Card>\n        <CardBody>\n          <CardTitle tag=\"h5\">Instructions</CardTitle>\n          <CardText>\n            {instructions.map((instruction) => (\n              <div key={instruction.number}>•{instruction.step}</div>\n            ))}\n          </CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}